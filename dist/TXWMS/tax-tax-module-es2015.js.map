{"version":3,"sources":["./src/app/demo/report/report/business/tax/tax.component.html","./src/app/demo/report/report/business/tax/tax-routing.module.ts","./src/app/demo/report/report/business/tax/tax.component.scss","./src/app/demo/report/report/business/tax/tax.component.ts","./src/app/demo/report/report/business/tax/tax.module.ts"],"names":[],"mappings":"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","file":"tax-tax-module-es2015.js","sourcesContent":["export default \"\\n\\n\\n\\n\\n  <div class=\\\"row\\\" >\\n    <div class=\\\"col-xl-12 text-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)='exportToExcel(pro)'>Export &nbsp; <i class=\\\"fas fa-file-export\\\"></i></button>\\n    </div>\\n\\n    <div class=\\\"col-xl-12\\\">\\n      <app-card cardTitle=\\\"GSTR\\\" [options]=\\\"false\\\" blockClass=\\\"table-border-style\\\" *ngIf=\\\"table\\\">\\n        <div class=\\\"month\\\" style=\\\"text-align: right; \\\"> <b style=\\\"color: black;\\\">Select Month</b>\\n          <select (change)=\\\"setchange($event.target.value)\\\" style=\\\"width: 183px; height: 30px;\\\">\\n              <option  value='1'>January</option>\\n              <option value='2'>February</option>\\n              <option value='3'>March</option>\\n              <option value='4'>April</option>\\n              <option value='5'>May</option>\\n              <option value='6'>June</option>\\n              <option value='7'>July</option>\\n              <option value='8'>August</option>\\n              <option value='9'>September</option>\\n              <option value='10'>October</option>\\n              <option value='11'>November</option>\\n              <option  value='12'>December</option>\\n              </select> \\n        </div>\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-striped\\\"  datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" >\\n            <thead>\\n            <tr>\\n              <th > Date </th>\\n              <th>Supplier Name</th>\\n              <th>Invoice-No </th>\\n              <th>GST-NO</th>\\n              <th>Gross-Total <sub></sub> </th>\\n              <th>Sales-GST <sub>12%</sub> </th>\\n              <th>Over-All CGST (6%) </th>\\n              <th>Over-All SGST (6%) </th>\\n              <th > Over-All GST (12%)</th>\\n            \\n            </tr>\\n           \\n            </thead>\\n            <tbody>\\n            <tr *ngFor='let data of pro'>\\n              <td>{{data.date}} </td>\\n              <td>{{data.name}} </td>\\n              <td> {{data.invoiceNumber}} </td>\\n              <td> {{data.cost}} </td>\\n              <td> {{data.overAllInvoiceTotal | number:'1.2-2'}} </td>\\n              <td> {{data.billAmount | number:'1.2-2'}} </td>\\n              <td> {{data.overAllCGSTUnit| number:'1.2-2'}} </td>\\n              <td> {{data.overAllSGSTUnit| number:'1.2-2'}} </td>\\n             <td> {{data.overAllGSTUnit | number:'1.2-2'}}</td>\\n            </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </app-card>\\n\\n    </div>\\n    \\n  </div>\\n\\n  \"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {TaxComponent} from './tax.component';\r\n//  import { FileformComponent } from \"../file-upload/fileform/fileform.component\";\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TaxComponent\r\n  },\r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TaxRoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vcmVwb3J0L3JlcG9ydC9idXNpbmVzcy90YXgvdGF4LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SalesService } from \"../../../../pages/sales/sales.service\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { SupplierService } from '../../../../pages/form-elements/basic-elements/supplier.service'\nimport { Subject } from 'rxjs';\nimport { DataTableDirective } from 'angular-datatables';\nimport { ExcelService } from \"../../../../../../assets/xlservice/xlservice\";\n\n@Component({\n  selector: 'app-tax',\n  templateUrl: './tax.component.html',\n  styleUrls: ['./tax.component.scss']\n})\nexport class TaxComponent implements OnInit {\n  postSales:FormGroup;\n  test:boolean=false; \n  table:boolean=true;\n  sname:boolean=true;\n  getSuppliers;\n  searchSupplier\n  patchValue;\n  searchData;\n  searchText;\n  salesData;\n  sss\n  Excel=[]\n  pro\n  dtOptions: DataTables.Settings = {};\ndtTrigger: Subject<any> = new Subject();\ndtElement: DataTableDirective; \nisDtInitialized:boolean = false\n  constructor(  private salesErvice:SalesService,\n    private fb:FormBuilder, \n    private supplierService:SupplierService,\n    private excelService:ExcelService) { }\n\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10\n    };\n    this.salesErvice.getInvProduct().subscribe(data=>{\n      this.searchData=data;\n     \n    })\n    this.dtTrigger.next();\n    if (this.isDtInitialized) {\n      this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n        dtInstance.destroy();\n        this.dtTrigger.next();\n      });\n    } else {\n      this.isDtInitialized = true\n      this.dtTrigger.next();\n    }\n  }\n  setchange(selectedvalue) {\n    this.sss = selectedvalue;\n    const emp = [this.sss];\n   \n  const filteredArray = this.searchData.filter(function(itm) {\n    return emp.indexOf(itm.crmonth) > -1;\n        });\n  this.pro = filteredArray;\n  console.log(this.pro,'month and year')\n  this.dtTrigger.next();\n  \n  if (this.isDtInitialized) {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n      this.dtTrigger.next();\n    });\n  } else {\n    this.isDtInitialized = true\n    this.dtTrigger.next();\n  }\n    //  var currentMonth = 5\n    //  var currentYear = 2020\n    \n    //Get the year and month from the iterated date\n    // var [year, month] = e.date.split('-');\n    \n    //Then filter the dates\n  //  var events =  this.getData.filter(e => {\n  //       var [month,year] = e.monthyear.split('-'); // Or, var month = e.date.split('-')[1];\n  //       return emp.indexOf(currentMonth == month) && (currentYear == year);\n  //   });\n  \n   \n    \n  \n  }\n  exportToExcel(event) {\n    this.Excel=[]\n    event.forEach(dat => {\n      var Date=dat.date\n      var Supplier= dat.name\n      var invoiceNumber=dat.invoiceNumber\n      var GSTNumber=dat.cost\n      var GrossTotal=dat.overAllInvoiceTotal\n      var SalesCost =dat.billAmount\n      var OverAllCGST=dat.overAllCGSTUnit\n      var OverAllSGST=dat.overAllSGSTUnit\n      var OverAllGST=dat.overAllGSTUnit\n      // var Profit=dat.profit\n      var obj=Object.assign({Date,Supplier,invoiceNumber,GSTNumber,GrossTotal,SalesCost,OverAllCGST,OverAllSGST,OverAllGST})\n      this.Excel.push(obj)\n     });\n    this.excelService.exportAsExcelFile( this.Excel, 'persons');\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n\r\nimport { TaxComponent} from './tax.component';\r\n// import { FileUploadComponent } from './fi';\r\nimport {SharedModule} from '../../../../../theme/shared/shared.module';\r\nimport { TaxRoutingModule } from './tax-routing.module';\r\n// import { NoteformComponent } from \"./noteform/noteform.component\";\r\n\r\n\r\n@NgModule({ \r\n  declarations: [TaxComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TaxRoutingModule,\r\n    SharedModule,\r\n    \r\n    DataTablesModule\r\n  ] \r\n})\r\nexport class TaxModule { }  \r\n  "],"sourceRoot":"webpack:///"}